@page
@model knapsack_app.Pages.Cli.PlayGameModel
@{
    // Thi·∫øt l·∫≠p Layout cho trang
    Layout = "_Cli_Layout";
    ViewData["Title"] = "Knapsack 0/1 Game";
}

<script src="https://cdn.tailwindcss.com"></script>
<link href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" rel="stylesheet" />
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700;900&display=swap" rel="stylesheet">
<link rel="stylesheet" href="~/css/playgame.css">

@{
    // Trong m√¥i tr∆∞·ªùng Razor th·ª±c t·∫ø, b·∫°n s·∫Ω parse chu·ªói JSON n√†y th√†nh ƒë·ªëi t∆∞·ª£ng C#
    // Hi·ªán t·∫°i, t√¥i d√πng ViewBag/TempData ho·∫∑c m√¥ h√¨nh Model ƒë·ªÉ truy·ªÅn data
    // D∆∞·ªõi ƒë√¢y l√† c√°ch m√¥ ph·ªèng d·ªØ li·ªáu JSON ƒë√£ ƒë∆∞·ª£c parse
    var gameData = new
    {
        id = "KSC-8A2416",
        difficulty = 1,
        maxCapacity = 6,
        maxDuration = 60,
        missCount = 3,
        // D·ªØ li·ªáu V·∫≠t ph·∫©m (Items)
        items = new[]
    {
new { Id = "e4f684a4-118b-47fe-90a3-d245b8a870a0", Value = 6, Weight = 1, Name = "Item A" },
new { Id = "b89fc1be-c57d-4cd8-98e0-3171f4064f37", Value = 10, Weight = 2, Name = "Item B" },
new { Id = "94d06403-a9ae-402c-a9bd-10dbdd64e72c", Value = 120, Weight = 3, Name = "Item C" }
},
        // B·∫£ng DP
        dpBoard = new[]
    {
new[] {0, 0, 0, 0, 0, 0, 0},
new[] {0, 6, 6, 6, 6, 6, 6},
new[] {0, 6, 10, 16, 16, 16, 16},
new[] {0, 6, 10, 120, 126, 130, 136}
},
        // D·ªØ li·ªáu h√†ng
        weights = Enumerable.Range(0, 7).ToArray() // 0 ƒë·∫øn maxCapacity
    };

    var capacity = gameData.maxCapacity;
    var dpRows = gameData.dpBoard.Length;
    var dpCols = gameData.dpBoard[0].Length;
}

<body class="bg-gray-100 text-gray-800 pt-16 font-[Inter]">

    <div id="utility-toolbar" class="fixed top-1/2 left-0 transform -translate-y-1/2 ml-4 z-50 flex flex-col space-y-3">
        <button class="utility-btn bg-red-500 text-white hover:bg-red-600" title="Reset Game (X√≥a h·∫øt v·∫≠t ph·∫©m)">
            <span class="material-symbols-outlined">
            tv_options_edit_channels
            </span>
        </button>
        <button id="toggle-dp-btn" class="utility-btn bg-purple-500 text-white hover:bg-purple-600" title="·∫®n/Hi·ªán B·∫£ng DP">
            <span class="material-symbols-outlined">
            stylus_fountain_pen
            </span>
        </button>
        <button class="utility-btn bg-blue-500 text-white hover:bg-blue-600" title="Xem H∆∞·ªõng D·∫´n">
            <span class="material-symbols-outlined">
            flash_on
            </span>
        </button>
    </div>
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-10">

        <div class="bg-white p-6 rounded-xl shadow-lg border-b-4 border-blue-500 mb-8">
            <h1 class="text-3xl font-extrabold text-gray-900 mb-4 tracking-tight sm:text-4xl">
                KNAPSACK 0/1: <span class="text-blue-600">MISSION @gameData.id</span>
            </h1>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm font-semibold uppercase">
                <div class="p-3 bg-blue-50 rounded-lg text-blue-800">
                    <span class="block text-xs font-normal text-gray-500">Max Capacity (W)</span>
                    <span class="text-2xl font-bold">@gameData.maxCapacity</span> kg
                </div>
                <div class="p-3 bg-green-50 rounded-lg text-green-800">
                    <span class="block text-xs font-normal text-gray-500">Max Duration</span>
                    <span class="text-2xl font-bold">@gameData.maxDuration</span> secs
                </div>
                <div class="p-3 bg-red-50 rounded-lg text-red-800">
                    <span class="block text-xs font-normal text-gray-500">Miss Count (L·ªói t·ªëi ƒëa)</span>
                    <span class="text-2xl font-bold">@gameData.missCount</span> l·∫ßn
                </div>
                <div class="p-3 bg-yellow-50 rounded-lg text-yellow-800">
                    <span class="block text-xs font-normal text-gray-500">Difficulty</span>
                    <span class="text-2xl font-bold">@gameData.difficulty</span>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">

            <div class="lg:col-span-3 space-y-8">

                <div class="bg-white p-6 rounded-xl shadow-lg sticky top-20">
                    <h3 class="text-2xl font-bold mb-4 text-gray-900">1. Danh S√°ch V·∫≠t Ph·∫©m</h3>
                    <p class="text-sm text-gray-600 mb-4">Th√¥ng s·ªë c∆° b·∫£n c·ªßa c√°c v·∫≠t ph·∫©m.</p>

                    <div class="overflow-x-auto">
                        <table class="min-w-max text-sm text-center text-gray-500 border-collapse table-fixed">

                            <thead class="text-xs text-gray-700 uppercase bg-gray-50">
                                <tr>
                                    <th scope="col" class="px-4 py-2 text-left w-32 min-w-32">Thu·ªôc t√≠nh \ Item</th>
                                    @for (int i = 0; i < gameData.items.Length; i++)
                                    {
                                        var item = gameData.items[i];
                                        <th scope="col"
                                            class="px-4 py-2 font-bold text-gray-900 border-l border-gray-300 w-24 min-w-24">
                                            Vp. @(i + 1) (@item.Name)
                                        </th>
                                    }
                                </tr>
                            </thead>

                            <tbody>
                                <tr class="bg-white border-b hover:bg-gray-50">
                                    <th scope="row" class="px-4 py-2 font-medium text-gray-900 text-left bg-blue-50">
                                        Gi√° Tr·ªã
                                    </th>
                                    @foreach (var item in gameData.items)
                                    {
                                        <td class="px-4 py-2 text-green-600 font-semibold border-l border-gray-200">
                                            @item.Value
                                        </td>
                                    }
                                </tr>

                                <tr class="bg-white hover:bg-gray-50">
                                    <th scope="row"
                                        class="px-4 py-2 font-medium text-gray-900 text-left bg-blue-50 border-t border-gray-200">
                                        Tr·ªçng L∆∞·ª£ng
                                    </th>
                                    @foreach (var item in gameData.items)
                                    {
                                        <td class="px-4 py-2 text-red-600 font-semibold border-t border-l border-gray-200">
                                            @item.Weight kg
                                        </td>
                                    }
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="bg-white p-4 rounded-xl shadow-lg border-l-4 border-yellow-500">
                    <button id="hint-button"
                        class="w-full flex justify-between items-center text-left text-lg font-bold text-yellow-800 hover:text-yellow-600 transition">
                        <span>üí° G·ª£i √ù (Hint)</span>
                        <span id="hint-icon">‚ñ∂</span>
                    </button>

                    <div id="hint-content" class="mt-3 overflow-hidden transition-max-h duration-500 ease-in-out"
                        style="max-height: 0;">
                        <hr class="my-3">
                        <h4 class="text-md font-bold mb-2 text-gray-900">Thu·∫≠t To√°n Quy Ho·∫°ch ƒê·ªông (DP)</h4>
                        <p class="text-sm text-gray-700 mb-2">Gi√° tr·ªã t·∫°i √¥ $DP[i][w]$ l√† gi√° tr·ªã l·ªõn nh·∫•t c√≥ th·ªÉ ƒë·∫°t
                            ƒë∆∞·ª£c khi
                            ch·ªçn t·ª´ **$i$ v·∫≠t ph·∫©m ƒë·∫ßu ti√™n** v·ªõi **t√∫i c√≥ s·ª©c ch·ª©a $w$**.</p>

                        <p class="text-sm font-semibold text-blue-600 mt-3">C√¥ng Th·ª©c Truy H·ªìi (Recurrence Relation):
                        </p>
                        <div class="bg-blue-50 p-3 rounded-lg overflow-x-auto text-xs font-mono">
                            <pre>
i: V·∫≠t ph·∫©m hi·ªán t·∫°i ƒëang x√©t (Item i)
w: S·ª©c ch·ª©a hi·ªán t·∫°i c·ªßa t√∫i (Capacity w)
W_i: Tr·ªçng l∆∞·ª£ng c·ªßa Item i
V_i: Gi√° tr·ªã c·ªßa Item i

    N·∫øu W_i > w (V·∫≠t ph·∫©m qu√° n·∫∑ng):
    DP[i][w] = DP[i-1][w]
    (Kh√¥ng th·ªÉ ch·ªçn Item i, gi·ªØ nguy√™n gi√° tr·ªã t·ªëi ∆∞u c·ªßa i-1)

    N·∫øu W_i <= w (V·∫≠t ph·∫©m v·ª´a v·∫∑n):
    DP[i][w] = max(
    DP[i-1][w],                         // TH1: Kh√¥ng ch·ªçn Item i
    V_i + DP[i-1][w - W_i]              // TH2: Ch·ªçn Item i
    )
(L·∫•y gi√° tr·ªã l·ªõn nh·∫•t gi·ªØa vi·ªác KH√îNG ch·ªçn v√† C√ì ch·ªçn Item i)
                            </pre>
                        </div>
                        <p class="text-sm text-gray-600 mt-3 italic">
                            **Gi√° tr·ªã t·ªëi ∆∞u** cu·ªëi c√πng s·∫Ω n·∫±m ·ªü √¥ $DP[@gameData.items.Length][@gameData.maxCapacity]$.
                        </p>
                    </div>
                </div>

                <div class="bg-white p-6 rounded-xl shadow-lg">
                    <h3 class="text-2xl font-bold mb-4 text-gray-900">2. B·∫£ng Quy Ho·∫°ch ƒê·ªông</h3>
                    <p class="text-sm text-gray-600 mb-4">Gi√° tr·ªã t·ªëi ƒëa ƒë·∫°t ƒë∆∞·ª£c khi x√©t $i$ v·∫≠t ph·∫©m ƒë·∫ßu ti√™n v√† c√≥
                        s·ª©c ch·ª©a $w$.</p>

                    <div class="overflow-x-auto dp-table-container">
                        <table class="min-w-full border-collapse table-fixed">
                            <thead class="bg-gray-200">
                                <tr class="h-12">
                                    <th class="dp-header-i bg-gray-300 w-10">i\w</th>
                                    @for (int w = 0; w <= capacity; w++)
                                    {
                                        <th class="dp-header text-red-600 w-10">@w</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < dpRows; i++)
                                {
                                    <tr class="h-12">
                                        <th class="dp-header-i w-10 bg-gray-200 text-red-600">
                                            @(i)
                                        </th>
                                        @for (int w = 0; w < dpCols; w++)
                                        {
                                            var cellValue = gameData.dpBoard[i][w];
                                            <td class="dp-cell text-center">@cellValue</td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="bg-white p-6 rounded-xl shadow-lg">
                    <h3 class="text-2xl font-bold mb-4 text-gray-900">3. Knapsack (T√∫i)</h3>
                    <p class="text-sm text-gray-600 mb-4">K√©o v·∫≠t ph·∫©m v√†o ƒë√¢y. T·ªïng tr·ªçng l∆∞·ª£ng kh√¥ng qu√°
                        @gameData.maxCapacity kg.</p>

                    <div id="knapsack-dropzone" class="knapsack-dropzone">
                        <div class="w-full text-center text-gray-500 p-8">
                            <svg class="mx-auto w-10 h-10 text-gray-400" fill="none" stroke="currentColor"
                                viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M21 13.255A23.518 23.518 0 0112 15c-3.15 0-6.11-.826-8.75-2.255L3 18v2h18v-7.745zM12 3a9 9 0 00-9 9h18a9 9 0 00-9-9z">
                                </path>
                            </svg>
                            <p class="mt-2">K√©o v·∫≠t ph·∫©m v√†o ƒë√¢y</p>
                        </div>
                    </div>

                    <div class="mt-4 p-3 bg-gray-50 rounded-lg border">
                        <p class="text-lg font-bold">T·ªïng Gi√° Tr·ªã: <span id="total-value"
                                class="text-green-600">0</span></p>
                        <p class="text-lg font-bold">T·ªïng Tr·ªçng L∆∞·ª£ng: <span id="total-weight"
                                class="text-red-600">0</span> / @gameData.maxCapacity kg</p>
                    </div>
                </div>
            </div>

            <div class="lg:col-span-1">
                <div class="sticky top-20 space-y-4">
                    <div class="bg-white p-4 rounded-xl shadow-lg">
                        <h3 class="text-xl font-bold text-gray-900 mb-2">4. V·∫≠t Ph·∫©m ƒê·ªÉ Ch·ªçn</h3>
                        <p class="text-sm text-gray-600 mb-3">T·ªïng c·ªông: @gameData.items.Length v·∫≠t ph·∫©m.</p>

                        <div id="drag-items-container" class="flex flex-col gap-3 max-h-[85vh] overflow-y-auto pr-2">
                            @foreach (var item in gameData.items)
                            {
                                <div class="drag-item w-full" draggable="true" data-id="@item.Id" data-value="@item.Value"
                                    data-weight="@item.Weight">
                                    <p class="text-sm font-bold text-gray-900">@item.Name</p>
                                    <div class="flex justify-between text-xs mt-1">
                                        <p class="text-green-600">V: <strong>@item.Value</strong></p>
                                        <p class="text-red-600">W: <strong>@item.Weight</strong> kg</p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        </div>
    </main>

    <script>
        const knapsack = document.getElementById('knapsack-dropzone');
        const itemsContainer = document.getElementById('drag-items-container');
        const maxCapacity = @capacity;

        let totalWeight = 0;
        let totalValue = 0;

        function updateTotals() {
            document.getElementById('total-weight').textContent = totalWeight;
            document.getElementById('total-value').textContent = totalValue;

            if (totalWeight > maxCapacity) {
                knapsack.classList.add('border-red-500', 'bg-red-50');
                knapsack.classList.remove('border-blue-500', 'bg-blue-50');
            } else {
                knapsack.classList.remove('border-red-500', 'bg-red-50');
            }
        }

        // B·∫Øt ƒë·∫ßu k√©o
        itemsContainer.querySelectorAll('.drag-item').forEach(item => {
            item.addEventListener('dragstart', (e) => {
                // Truy·ªÅn d·ªØ li·ªáu v·ªÅ ID, Value v√† Weight c·ªßa v·∫≠t ph·∫©m
                e.dataTransfer.setData('text/plain', JSON.stringify({
                    id: item.dataset.id,
                    value: parseInt(item.dataset.value),
                    weight: parseInt(item.dataset.weight),
                }));
                // T√πy ch·ªânh hi·ªáu ·ª©ng k√©o
                item.style.opacity = '0.5';
            });

            item.addEventListener('dragend', (e) => {
                item.style.opacity = '1';
            });
        });

        // Khu v·ª±c th·∫£: NgƒÉn ch·∫∑n m·∫∑c ƒë·ªãnh
        knapsack.addEventListener('dragover', (e) => {
            e.preventDefault();
            knapsack.classList.add('drag-over');
        });

        // Khu v·ª±c th·∫£: R·ªùi kh·ªèi
        knapsack.addEventListener('dragleave', (e) => {
            knapsack.classList.remove('drag-over');
        });

        // Khu v·ª±c th·∫£: Th·∫£ v·∫≠t ph·∫©m
        knapsack.addEventListener('drop', (e) => {
            e.preventDefault();
            knapsack.classList.remove('drag-over');

            const data = JSON.parse(e.dataTransfer.getData('text/plain'));
            const draggedItem = itemsContainer.querySelector(`[data-id="${data.id}"]`);

            // N·∫øu v·∫≠t ph·∫©m ch∆∞a c√≥ trong t√∫i (ƒë·∫£m b·∫£o kh√¥ng th·∫£ l·∫°i t·ª´ trong t√∫i)
            if (draggedItem && draggedItem.parentNode === itemsContainer) {

                // 1. Th√™m v√†o t√∫i (Knapsack)
                knapsack.appendChild(draggedItem);

                // 2. C·∫≠p nh·∫≠t t·ªïng
                totalWeight += data.weight;
                totalValue += data.value;
                updateTotals();

                // 3. X√≥a placeholder khi c√≥ v·∫≠t ph·∫©m
                const placeholder = knapsack.querySelector('div.w-full.text-center');
                if (placeholder) placeholder.remove();

                // 4. Th√™m n√∫t "Remove" ƒë·ªÉ k√©o ra
                const removeBtn = document.createElement('button');
                removeBtn.textContent = 'X';
                removeBtn.className = 'absolute top-1 right-1 text-red-500 hover:text-red-700 font-bold';
                removeBtn.onclick = (event) => {
                    event.stopPropagation(); // NgƒÉn ch·∫∑n s·ª± ki·ªán k√©o c·ªßa item cha
                    removeFromKnapsack(draggedItem, data);
                };

                // ƒê√°nh d·∫•u ƒë√£ ƒë∆∞·ª£c ch·ªçn v√† ch·ªânh style cho ph√π h·ª£p v·ªõi t√∫i
                draggedItem.classList.add('relative', 'border-blue-500');
                draggedItem.classList.remove('bg-white', 'ring-4', 'ring-blue-300', 'shadow-lg'); // X√≥a hover c≈©
                draggedItem.appendChild(removeBtn);

                // NgƒÉn kh√¥ng cho k√©o v·∫≠t ph·∫©m ƒë√£ n·∫±m trong Knapsack ra l·∫°i (t·∫Øt draggable)
                draggedItem.setAttribute('draggable', 'false');
            }
        });

        // H√†m k√©o v·∫≠t ph·∫©m ra kh·ªèi t√∫i
        function removeFromKnapsack(itemElement, itemData) {
            // 1. Chuy·ªÉn v·∫≠t ph·∫©m v·ªÅ l·∫°i khu v·ª±c k√©o
            itemsContainer.appendChild(itemElement);

            // 2. C·∫≠p nh·∫≠t t·ªïng
            totalWeight -= itemData.weight;
            totalValue -= itemData.value;
            updateTotals();

            // 3. X√≥a n√∫t Remove v√† reset style
            itemElement.querySelector('button').remove();
            itemElement.classList.remove('relative', 'border-blue-500');
            itemElement.setAttribute('draggable', 'true');

            // 4. Hi·ªán l·∫°i placeholder n·∫øu t√∫i tr·ªëng
            if (knapsack.children.length === 0) {
                const placeholderHtml = `
                    <div class="w-full text-center text-gray-500 p-8">
                        <svg class="mx-auto w-10 h-10 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.518 23.518 0 0112 15c-3.15 0-6.11-.826-8.75-2.255L3 18v2h18v-7.745zM12 3a9 9 0 00-9 9h18a9 9 0 00-9-9z"></path></svg>
                        <p class="mt-2">K√©o v·∫≠t ph·∫©m v√†o ƒë√¢y</p>
                    </div>`;
                knapsack.innerHTML = placeholderHtml;
            }
        }
        
        const hintButton = document.getElementById('hint-button');
        const hintContent = document.getElementById('hint-content');
        const hintIcon = document.getElementById('hint-icon');
        console.log("test",hintContent);
        console.log(hintButton);
        // ƒê·∫∑t chi·ªÅu cao max-height ban ƒë·∫ßu ƒë·ªÉ transition ho·∫°t ƒë·ªông
        // Ph·∫£i th√™m max-height l·ªõn h∆°n n·ªôi dung ƒë·ªÉ ·∫©n/hi·ªán m∆∞·ª£t m√†
        hintContent.style.maxHeight = '0px'; // ƒê·∫£m b·∫£o gi√° tr·ªã l√† chu·ªói '0px'
        hintButton.addEventListener('click', () => {
            if (hintContent.style.maxHeight === '0px') {
                // Expand: ƒê·∫∑t gi√° tr·ªã l·ªõn h∆°n n·ªôi dung th·ª±c t·∫ø (v√≠ d·ª•: 500px)
                hintContent.style.maxHeight = "500px"; 
                hintIcon.textContent = '‚ñº';
            } else {
                // Collapse
                hintContent.style.maxHeight = '0px';
                hintIcon.textContent = '‚ñ∂';
            }
        });
    </script>
</body>