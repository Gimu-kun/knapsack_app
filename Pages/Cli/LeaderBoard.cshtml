@page "/rank"
@model knapsack_app.Pages.LeaderboardModel
@{
    ViewData["Title"] = "B·∫£ng X·∫øp H·∫°ng Knapsack 0/1";
    Layout = "_Cli_Layout";
}

<script src="https://cdn.tailwindcss.com"></script>
<link rel="stylesheet" href="~/css/leader_board.css">

@{}

<body class="bg-gray-100 text-gray-800 font-[Inter] min-h-screen p-4 sm:p-8">

    <div class="max-w-7xl mx-auto">
        <h1 class="text-4xl sm:text-5xl font-extrabold text-gray-900 mb-8 sm:mb-12 text-center tracking-tight">
            üèÜ B·∫£ng X·∫øp H·∫°ng <span class="text-blue-600">KNAPSACK 0/1</span>
        </h1>

        <div class="bg-white p-4 sm:p-6 rounded-xl shadow-lg mb-6 sm:mb-8 border-b-4 border-blue-500">
            <h2 class="text-xl font-bold mb-3 text-gray-800">Ch·ªçn Ch·∫ø ƒê·ªô Ch∆°i (Mode)</h2>
            <div class="grid grid-cols-4 gap-2 sm:gap-4">
                <button data-mode="1"
                    class="mode-tab p-2 text-sm font-semibold rounded-lg text-center transition hover:shadow-lg hover:scale-[1.02] @(Model.SelectedModeInt == 1 ? "tab-active" : "tab-inactive")">
                    1 Ng∆∞·ªùi Ch∆°i (Solo)
                </button>
                <button data-mode="2"
                    class="mode-tab p-2 text-sm font-semibold rounded-lg text-center transition hover:shadow-lg hover:scale-[1.02] @(Model.SelectedModeInt == 2 ? "tab-active" : "tab-inactive")">
                    2 Ng∆∞·ªùi Ch∆°i (Duo)
                </button>
                <button data-mode="3"
                    class="mode-tab p-2 text-sm font-semibold rounded-lg text-center transition hover:shadow-lg hover:scale-[1.02] @(Model.SelectedModeInt == 3 ? "tab-active" : "tab-inactive")">
                    3 Ng∆∞·ªùi Ch∆°i (Trio)
                </button>
                <button data-mode="4"
                    class="mode-tab p-2 text-sm font-semibold rounded-lg text-center transition hover:shadow-lg hover:scale-[1.02] @(Model.SelectedModeInt == 4 ? "tab-active" : "tab-inactive")">
                    4 Ng∆∞·ªùi Ch∆°i (Squad)
                </button>
            </div>
        </div>

        <div class="bg-white p-4 sm:p-6 rounded-xl shadow-lg mb-6 sm:mb-8 border-b-4 border-orange-500">
            <h2 class="text-xl font-bold mb-3 text-gray-800">Ch·ªçn ƒê·ªô Kh√≥ (Difficulty)</h2>
            <div class="grid grid-cols-3 gap-2 sm:gap-4">
                <button data-difficulty="1"
                    class="difficulty-tab p-2 text-sm font-semibold rounded-lg text-center transition hover:shadow-lg hover:scale-[1.02] @(Model.SelectedDifficultyInt == 1 ? "difficulty-active" : "difficulty-inactive")">
                    D·ªÑ
                </button>
                <button data-difficulty="2"
                    class="difficulty-tab p-2 text-sm font-semibold rounded-lg text-center transition hover:shadow-lg hover:scale-[1.02] @(Model.SelectedDifficultyInt == 2 ? "difficulty-active" : "difficulty-inactive")">
                    TRUNG B√åNH
                </button>
                <button data-difficulty="3"
                    class="difficulty-tab p-2 text-sm font-semibold rounded-lg text-center transition hover:shadow-lg hover:scale-[1.02] @(Model.SelectedDifficultyInt == 3 ? "difficulty-active" : "difficulty-inactive")">
                    KH√ì
                </button>
            </div>
        </div>

        <div class="bg-white p-6 sm:p-8 rounded-xl shadow-2xl">
            <h2 class="text-2xl sm:text-3xl font-extrabold text-gray-900 mb-4 sm:mb-6 border-b pb-3">
                BXH: <span id="current-mode-display" class="text-blue-600">@Model.SelectedModeInt Ng∆∞·ªùi Ch∆°i</span> -
                <span id="current-difficulty-display" class="text-orange-600">@Model.SelectedDifficultyString</span>
            </h2>

            <div class="overflow-x-auto">
                <table class="min-w-full text-sm sm:text-base text-gray-700 leaderboard-table">
                    <thead>
                        <tr>
                            <th scope="col" class="text-center w-16 rounded-tl-xl">#</th>
                            <th scope="col" class="text-left w-auto">T√™n / ƒê·ªôi</th>
                            <th scope="col" class="text-center w-35 text-green-600">ƒêi·ªÉm (Value)</th>
                            <th scope="col" class="text-center w-35 text-red-600">Th·ªùi gian (s)</th>
                            <th scope="col" class="text-center w-64 rounded-tr-xl">Ng√†y ch∆°i</th>
                        </tr>
                    </thead>
                    
                    <tbody id="leaderboard-body">
                        @if (Model.LeaderboardData.Any())
                        {
                            @foreach (var entry in Model.LeaderboardData)
                            {
                                string rowClass = "bg-white hover:bg-gray-50";
                                string rankText = entry.Rank.ToString();
                                
                                @if (entry.Rank == 1)
                                {
                                    rankText = "ü•á";
                                    rowClass = "bg-yellow-50 font-extrabold text-gray-900 border-l-4 border-yellow-600 transition hover:bg-yellow-100";
                                }
                                else if (entry.Rank == 2)
                                {
                                    rankText = "ü•à";
                                    rowClass = "bg-gray-50 font-semibold transition hover:bg-gray-100";
                                }
                                else if (entry.Rank == 3)
                                {
                                    rankText = "ü•â";
                                    rowClass = "bg-gray-100 font-medium transition hover:bg-gray-200";
                                }

                                <tr class="@rowClass">
                                    <td class="text-center font-bold text-lg">@rankText</td>
                                    <td class="text-left py-3">
                                <div class="flex items-center space-x-3">
                                    @{
                                        // X√°c ƒë·ªãnh URL Avatar ch√≠nh
                                        string mainAvatarUrl = entry.PlayerCount == 1 ? entry.Avatar : 
                                        (entry.TeamMembers?.FirstOrDefault()?.Avatar ?? "");
                                    }
                                    @if (entry.PlayerCount == 1)
                                    {
                                    <div class="w-10 h-10 flex-shrink-0">
                                        @if (!string.IsNullOrEmpty(mainAvatarUrl))
                                                {
                                                    <img class="w-full h-full rounded-full object-cover border-2 border-gray-200 shadow-sm"
                                                        src="@mainAvatarUrl" 
                                                        alt="@entry.Name Avatar" 
                                                        onerror="this.onerror=null; this.src='/images/default_avatar.png';" 
                                                    />
                                                }
                                                else
                                                {
                                                    // Fallback: Avatar ch·ªØ c√°i ƒë·∫ßu t√™n
                                                    <div class="w-full h-full rounded-full bg-blue-500 text-white flex items-center justify-center font-bold text-lg border-2 border-blue-400 shadow-md">
                                                        @entry.Name.FirstOrDefault().ToString().ToUpper()
                                                    </div>
                                                }
                                    </div>
                                    }else{
                                        // Ch·∫ø ƒë·ªô MULTIPLAY (2, 3, 4 ng∆∞·ªùi ch∆°i) - Hi·ªÉn th·ªã nhi·ªÅu avatar
                                                <div class="flex flex-shrink-0 -space-x-2 overflow-hidden">
                                                    @foreach (var member in entry.TeamMembers.Take(4)) // Ch·ªâ hi·ªÉn th·ªã t·ªëi ƒëa 4 avatar
                                                    {
                                                        // Avatar 32x32px (w-8 h-8)
                                                        <div class="w-8 h-8 rounded-full border-2 border-white bg-gray-200 shadow-sm relative">
                                                            @if (!string.IsNullOrEmpty(member.Avatar))
                                                            {
                                                                <img class="w-full h-full rounded-full object-cover"
                                                                    src="@member.Avatar" 
                                                                    alt="@member.Username Avatar" 
                                                                    onerror="this.onerror=null; this.src='/images/default_avatar.png';" 
                                                                />
                                                            }else{
                                                                // Fallback: Avatar ch·ªØ c√°i
                                                                <div class="w-full h-full rounded-full bg-indigo-400 text-white flex items-center justify-center font-bold text-xs">
                                                                    @member.Username.FirstOrDefault().ToString().ToUpper()
                                                                </div>
                                                            }
                                                        </div>
                                                    }
                                                </div>
                                    }
                                    <div>
                                        @if (entry.PlayerCount == 1)
                                        {
                                            // Ch·∫ø ƒë·ªô SOLO
                                            <div class="font-bold text-gray-800">@entry.Name</div>
                                            <div class="text-xs text-gray-500 italic">C√° nh√¢n</div>
                                        }
                                        else
                                        {
                                            // Ch·∫ø ƒë·ªô MULTIPLAY
                                            <div class="font-bold text-gray-900 mb-1">@entry.Name</div>
                                            <div class="text-xs text-gray-600 space-x-1 mt-1">
                                                @foreach (var member in entry.TeamMembers)
                                                {
                                                    <span class="inline-block bg-blue-100 text-blue-800 px-1.5 py-0.5 rounded-full font-medium ring-1 ring-blue-300/50 hover:bg-blue-100 transition">
                                                        @member.Username
                                                    </span>
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>
                            </td>
                                    <td class="text-center text-green-600 font-bold">@entry.Score</td>
                                    <td class="text-center text-red-600 font-bold">@entry.Duration</td> 
                                    <td class="text-center text-gray-500">@entry.LastPlayedAt</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr class="text-center">
                                <td colspan="5" class="text-gray-500 p-8">
                                    <p class="text-lg font-semibold">Ch∆∞a c√≥ d·ªØ li·ªáu th√†nh t√≠ch cho ch·∫ø ƒë·ªô n√†y.</p>
                                    <p class="text-sm">H√£y l√† ng∆∞·ªùi ƒë·∫ßu ti√™n chinh ph·ª•c n√≥!</p>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div id="no-data-message" class="text-center text-gray-500 p-8 hidden">
                    </div>
            </div>
        </div>
    </div>
</body>

<script>
    // H√†m chuy·ªÉn ƒë·ªïi ƒë·ªô kh√≥ t·ª´ chu·ªói sang s·ªë nguy√™n (ƒë·ªÉ t·∫°o URL)
    function difficultyToInteger(difficultyString) {
        if (difficultyString === 'D·ªÑ') return 1;
        if (difficultyString === 'TRUNG B√åNH') return 2;
        if (difficultyString === 'KH√ì') return 3;
        return 1; // M·∫∑c ƒë·ªãnh
    }

    // Gi√° tr·ªã hi·ªán t·∫°i ƒë∆∞·ª£c l·∫•y t·ª´ Model C#
    const currentMode = '@Model.SelectedModeInt';
    const currentDifficultyInt = '@Model.SelectedDifficultyInt'; // Gi√° tr·ªã INT c·ªßa difficulty
    
    // X·ª≠ l√Ω s·ª± ki·ªán click Mode
    document.querySelectorAll('.mode-tab').forEach(tab => {
        tab.addEventListener('click', function() {
            const newMode = this.dataset.mode;
            // D√πng difficulty hi·ªán t·∫°i (INT) ƒë·ªÉ g·ª≠i ƒëi
            const newUrl = `?players=${newMode}&difficulty=${currentDifficultyInt}`;
            window.location.href = newUrl;
        });
    });

    // X·ª≠ l√Ω s·ª± ki·ªán click Difficulty
    document.querySelectorAll('.difficulty-tab').forEach(tab => {
        tab.addEventListener('click', function() {
            // L·∫•y data-difficulty ƒë√£ ƒë∆∞·ª£c g√°n l√† INT (1, 2, 3)
            const newDifficultyInt = this.dataset.difficulty; 
            
            // D√πng mode hi·ªán t·∫°i (INT) ƒë·ªÉ g·ª≠i ƒëi
            const newUrl = `?players=${currentMode}&difficulty=${newDifficultyInt}`;
            window.location.href = newUrl;
        });
    });
</script>